package com.kh.spring.member.controller;

import javax.servlet.http.HttpServletRequest;

import org.apache.taglibs.standard.lang.jstl.test.beans.PublicBean1;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;

@Controller // Controller 어노테이션 추가 시 빈 스캐닝 통해 자동으로 빈 등록이 됨
@RequestMapping("/member") // 공통적으로 사용될 url 주소
public class MemberController {

	/*
	 * @RequestMapping("/login") // RequestMapping 어노테이션 추가 시 HandlerMapping 등록(url
	 * 주소 작성) public void loginMember(){ System.out.println("로그인요청성공"); }
	 */
	// @RequestMapping("/member/logout")

	/*
	 * 요청 시 전달 데이터 대한 처리 방법
	 * 
	 * 1) HttpServletRequset 이용 방식 (기존 servlet 방식) : 해당 메소드의 매개변수로
	 * HttpServletRequest 타입을 작성하면 스프링 컨테이너에서 해당 메소드 호출 시 자동으로 객체를 생성하여 전달해줌
	 * 
	 */
	/*
	 * @RequestMapping("/login") public String loginMember(HttpServletRequest
	 * request) {
	 * 
	 * String id = request.getParameter("userId"); String pwd =
	 * request.getParameter("userPwd");
	 * 
	 * System.out.println("ID ---->" + id); System.out.println("PWD ---> " + pwd);
	 * 
	 * return "main"; }
	 */

	/*
	 * 2) RequestParam 어노테이션 이용 : request.getParameter("키값") : 밸류 <<- 이 작업을 대신해주는
	 * 어노테이션
	 */
	/*
	 * @RequestMapping("/login") public String
	 * loginMember(@RequestParam(value="userId", defaultValue = "존경하는 강사님") String
	 * userId,
	 * 
	 * @RequestParam("userPwd") String userPwd){
	 * 
	 * System.out.println("Id : " + userId); System.out.println("pwd : " + userPwd);
	 * 
	 * 
	 * return "main"; }
	 */

	/*
	 * 3) @RequestParam 생략하는 방법
	 * => 주의! 매개변수명 요청 시 전달되는 키값과 동일하게 작성해야함! 
	 */

	
	  @RequestMapping("/login") public String
	  loginMember(String userId, String userPwd){
	  
	  System.out.println("Id : " + userId); System.out.println("pwd : " + userPwd);
	  
	  
	  return "main"; }
	

}
